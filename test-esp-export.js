/**
 * ESP导出功能测试脚本
 * 用于验证API端点的基本功能
 */

// 测试配置
const TEST_CONFIG = {
  baseUrl: 'https://novamail.pages.dev', // 替换为实际域名
  testUserEmail: 'test@example.com',
  testTemplate: {
    name: 'Test Template',
    subject: 'Test Email Subject',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>Test Template</title>
      </head>
      <body style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h1 style="color: #333;">Hello World!</h1>
        <p>This is a test template exported from NovaMail.</p>
        <div style="background-color: #f0f0f0; padding: 15px; border-radius: 5px; margin: 20px 0;">
          <h2>Template Features:</h2>
          <ul>
            <li>Responsive design</li>
            <li>Clean typography</li>
            <li>Professional layout</li>
          </ul>
        </div>
        <p style="text-align: center; color: #666; font-size: 14px;">
          Generated by NovaMail ESP Export
        </p>
      </body>
      </html>
    `
  }
}

// 测试函数
async function testESPExport() {
  console.log('🧪 Starting ESP Export Tests...\n')

  // 测试1: Mailchimp连接
  await testMailchimpConnect()
  
  // 测试2: SendGrid导出
  await testSendGridExport()
  
  // 测试3: Resend导出（应该返回功能未支持）
  await testResendExport()
  
  console.log('\n✅ All tests completed!')
}

// 测试Mailchimp连接
async function testMailchimpConnect() {
  console.log('📧 Testing Mailchimp Connect...')
  
  try {
    const response = await fetch(`${TEST_CONFIG.baseUrl}/api/mailchimp/connect`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        userEmail: TEST_CONFIG.testUserEmail
      })
    })

    const result = await response.json()
    
    if (result.success) {
      console.log('✅ Mailchimp connect successful')
      console.log(`   Auth URL: ${result.auth_url}`)
    } else {
      console.log('❌ Mailchimp connect failed:', result.error)
    }
  } catch (error) {
    console.log('❌ Mailchimp connect error:', error.message)
  }
  
  console.log('')
}

// 测试SendGrid导出
async function testSendGridExport() {
  console.log('📧 Testing SendGrid Export...')
  
  try {
    const response = await fetch(`${TEST_CONFIG.baseUrl}/api/export`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        esp: 'sendgrid',
        name: TEST_CONFIG.testTemplate.name,
        html: TEST_CONFIG.testTemplate.html,
        subject: TEST_CONFIG.testTemplate.subject,
        userEmail: TEST_CONFIG.testUserEmail
      })
    })

    const result = await response.json()
    
    if (result.success) {
      console.log('✅ SendGrid export successful')
      console.log(`   Template ID: ${result.id}`)
      console.log(`   Edit URL: ${result.edit_url}`)
    } else {
      console.log('❌ SendGrid export failed:', result.error)
    }
  } catch (error) {
    console.log('❌ SendGrid export error:', error.message)
  }
  
  console.log('')
}

// 测试Resend导出
async function testResendExport() {
  console.log('📧 Testing Resend Export...')
  
  try {
    const response = await fetch(`${TEST_CONFIG.baseUrl}/api/export`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        esp: 'resend',
        name: TEST_CONFIG.testTemplate.name,
        html: TEST_CONFIG.testTemplate.html,
        subject: TEST_CONFIG.testTemplate.subject,
        userEmail: TEST_CONFIG.testUserEmail
      })
    })

    const result = await response.json()
    
    if (result.success) {
      console.log('✅ Resend export successful')
      console.log(`   Template ID: ${result.id}`)
    } else {
      console.log('⚠️  Resend export failed (expected):', result.error)
    }
  } catch (error) {
    console.log('❌ Resend export error:', error.message)
  }
  
  console.log('')
}

// 测试API端点可用性
async function testAPIEndpoints() {
  console.log('🔍 Testing API Endpoints Availability...\n')
  
  const endpoints = [
    '/api/export',
    '/api/mailchimp/connect',
    '/api/mailchimp/callback'
  ]
  
  for (const endpoint of endpoints) {
    try {
      const response = await fetch(`${TEST_CONFIG.baseUrl}${endpoint}`, {
        method: 'OPTIONS'
      })
      
      if (response.ok) {
        console.log(`✅ ${endpoint} - Available`)
      } else {
        console.log(`❌ ${endpoint} - Not available (${response.status})`)
      }
    } catch (error) {
      console.log(`❌ ${endpoint} - Error: ${error.message}`)
    }
  }
  
  console.log('')
}

// 运行所有测试
async function runAllTests() {
  console.log('🚀 NovaMail ESP Export Test Suite')
  console.log('=====================================\n')
  
  await testAPIEndpoints()
  await testESPExport()
  
  console.log('📋 Test Summary:')
  console.log('- API endpoints should be available')
  console.log('- Mailchimp connect should generate auth URL')
  console.log('- SendGrid export may fail without API key (expected)')
  console.log('- Resend export should return "not supported" message')
  console.log('\n💡 Next steps:')
  console.log('1. Configure ESP API keys in Cloudflare Workers')
  console.log('2. Set up Mailchimp OAuth application')
  console.log('3. Test with real ESP credentials')
}

// 如果在浏览器环境中运行
if (typeof window !== 'undefined') {
  // 浏览器环境
  window.testESPExport = testESPExport
  window.runAllTests = runAllTests
  console.log('Test functions available: testESPExport(), runAllTests()')
} else {
  // Node.js环境
  runAllTests().catch(console.error)
}
